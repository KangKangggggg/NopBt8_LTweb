type Query {
    products: [Product]
    productsOrderByPrice: [Product]
    productsByCategory(categoryId: ID!): [Product]
    productById(id: ID!): Product
    users: [User]
    userById(id: ID!): User
    categories: [Category]
    categoryById(id: ID!): Category
}

type Mutation {
    # Product Mutations
    createProduct(
        title: String!,
        quantity: Int!,
        description: String!,
        price: Float!,
        userId: ID!
    ): Product
    
    updateProduct(
        id: ID!,
        title: String,
        quantity: Int,
        description: String,
        price: Float
    ): Product
    
    deleteProduct(id: ID!): Boolean
    
    # User Mutations
    createUser(
        fullname: String!,
        email: String!,
        password: String!,
        phone: String!
    ): User
    
    updateUser(
        id: ID!,
        fullname: String,
        email: String,
        phone: String
    ): User
    
    deleteUser(id: ID!): Boolean
    
    # Category Mutations
    createCategory(
        name: String!,
        images: String
    ): Category
    
    updateCategory(
        id: ID!,
        name: String,
        images: String
    ): Category
    
    deleteCategory(id: ID!): Boolean
}

type Product {
    id: ID!
    title: String!
    quantity: Int!
    description: String!
    price: Float!
    user: User
    categories: [Category]
}

type User {
    id: ID!
    fullname: String!
    email: String!
    password: String!
    phone: String!
    products: [Product]
}

type Category {
    id: ID!
    name: String!
    images: String
    products: [Product]
}